{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _JSXStyle from \"styled-jsx/style\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { protocol, siteName, port } from '../utils/fetch-data-page';\n\nconst Error = ({\n  statusCode,\n  errorMessage\n}) => /*#__PURE__*/_jsxs(\"section\", {\n  className: \"jsx-1937488466\" + \" \" + \"error\",\n  children: [/*#__PURE__*/_jsx(\"div\", {\n    className: \"jsx-1937488466\" + \" \" + \"grid-x grid-padding-x\",\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: \"jsx-1937488466\" + \" \" + \"cell small-12 medium-12 large-12\",\n      children: [/*#__PURE__*/_jsx(\"h1\", {\n        className: \"jsx-1937488466\" + \" \" + \"text-center font-bold error-header\",\n        children: statusCode\n      }), /*#__PURE__*/_jsx(\"h2\", {\n        className: \"jsx-1937488466\" + \" \" + \"text-center\",\n        children: errorMessage\n      })]\n    })\n  }), /*#__PURE__*/_jsx(_JSXStyle, {\n    id: \"1937488466\",\n    children: [\".error.jsx-1937488466{padding:5rem;}\"]\n  })]\n});\n\nError.getInitialProps = async ({\n  res,\n  error\n}) => {\n  try {\n    const statusCode = res ? res.statusCode : error ? error.statusCode : 404;\n    const url = `${protocol}://${siteName}:${port}/api/error`;\n    const params = {\n      method: 'POST',\n      timeout: 5000,\n      compress: true\n    };\n    const response = await fetch(url, params);\n    const data = await response.json();\n    let errorMessage = '';\n\n    if (statusCode === 404) {\n      errorMessage = 'Страница не найдена';\n    }\n\n    if (statusCode === 500) {\n      errorMessage = 'Что-то пошло не так :(';\n    }\n\n    return _objectSpread(_objectSpread({}, data), {}, {\n      statusCode,\n      errorMessage\n    });\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport default Error;","map":null,"metadata":{},"sourceType":"module"}